/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_ru.h"

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define RUSSIAN 4

&sk {
  quick-release;
};

/ {
  combos {
// ┌───┬───┬───┬───┬───┬───┐  ┌───┬───┬───┬───┬───┬───┐
// │  0│  1│  2│  3│  4│  5│  │  6│  7│  8│ 9 │ 10│ 11│
// ├───┼───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┼───┤
// │ 12│ 13│ 14│ 15│ 16│ 17│  │ 18│ 19│ 20│ 21│ 22│ 23│
// ├───┼───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┼───┤
// │ 24│ 25│ 26│ 27│ 28│ 29│  │ 30│ 31│ 32│ 33│ 34│ 35│
// └───┴───┴───┼───┼───┼───┤  ├───┼───┼───┼───┴───┴───┘
//             │ 36│ 37│ 38│  │ 39│ 40│ 41│
//             └───┴───┴───┘  └───┴───┴───┘
    compatible = "zmk,combos";
    combo_lock_screen {
// ┌───┬───┬───┬───┬───┬───┐  ┌───┬───┬───┬───┬───┬───┐
// │   │   │   │   │   │   │  │   │   │   │   │   │   │
// ├───┼───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┼───┤
// │   │   │   │   │   │   │  │   │   │   │   │   │   │
// ├───┼───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┼───┤
// │   │   │ █ │ █ │ █ │   │  │   │   │   │   │   │   │
// └───┴───┴───┼───┼───┼───┤  ├───┼───┼───┼───┴───┴───┘
//             │   │   │   │  │   │   │   │
//             └───┴───┴───┘  └───┴───┴───┘
      timeout-ms = <50>;
      key-positions = <26 27 28>;
      bindings = <&kp LC(LG(Q))>;
    };
    combo_caps_lock {
// ┌───┬───┬───┬───┬───┬───┐  ┌───┬───┬───┬───┬───┬───┐
// │   │   │   │   │   │   │  │   │   │   │   │   │   │
// ├───┼───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┼───┤
// │   │   │   │   │   │ █ │  │ █ │   │   │   │   │   │
// ├───┼───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┼───┤
// │   │   │   │   │   │   │  │   │   │   │   │   │   │
// └───┴───┴───┼───┼───┼───┤  ├───┼───┼───┼───┴───┴───┘
//             │   │   │   │  │   │   │   │
//             └───┴───┴───┘  └───┴───┴───┘
      timeout-ms = <50>;
      key-positions = <17 18>;
      bindings = <&kp CAPSLOCK>;
    };
    combo_vscode_back {
// ┌───┬───┬───┬───┬───┬───┐  ┌───┬───┬───┬───┬───┬───┐
// │   │   │   │   │ █ │ █ │  │   │   │   │   │   │   │
// ├───┼───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┼───┤
// │   │   │   │   │   │   │  │   │   │   │   │   │   │
// ├───┼───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┼───┤
// │   │   │   │   │   │   │  │   │   │   │   │   │   │
// └───┴───┴───┼───┼───┼───┤  ├───┼───┼───┼───┴───┴───┘
//             │   │   │   │  │   │   │   │
//             └───┴───┴───┘  └───┴───┴───┘
      timeout-ms = <50>;
      key-positions = <4 5>;
      bindings = <&kp LC(MINUS)>;
    };
    combo_vscode_forward {
// ┌───┬───┬───┬───┬───┬───┐  ┌───┬───┬───┬───┬───┬───┐
// │   │   │   │   │   │   │  │ █ │ █ │   │   │   │   │
// ├───┼───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┼───┤
// │   │   │   │   │   │   │  │   │   │   │   │   │   │
// ├───┼───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┼───┤
// │   │   │   │   │   │   │  │   │   │   │   │   │   │
// └───┴───┴───┼───┼───┼───┤  ├───┼───┼───┼───┴───┴───┘
//             │   │   │   │  │   │   │   │
//             └───┴───┴───┘  └───┴───┴───┘
      timeout-ms = <50>;
      key-positions = <6 7>;
      bindings = <&kp LC(LS(MINUS))>;
    };
    combo_russian_layer {
// ┌───┬───┬───┬───┬───┬───┐  ┌───┬───┬───┬───┬───┬───┐
// │ █ │   │   │   │   │   │  │   │   │   │   │   │ █ │
// ├───┼───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┼───┤
// │   │   │   │   │   │   │  │   │   │   │   │   │   │
// ├───┼───┼───┼───┼───┼───┤  ├───┼───┼───┼───┼───┼───┤
// │   │   │   │   │   │   │  │   │   │   │   │   │   │
// └───┴───┴───┼───┼───┼───┤  ├───┼───┼───┼───┴───┴───┘
//             │   │   │   │  │   │   │   │
//             └───┴───┴───┘  └───┴───┴───┘
      timeout-ms = <50>;
      key-positions = <0 11>;
      bindings = <&tog RUSSIAN>;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";
    adjust_layer {
      if-layers = <LOWER RAISE>;
      then-layer = <ADJUST>;
    };
  };

  behaviors {
    td_dc_ru: tap_dance_ru_dot_comma {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp RU_MAC_DOT>, <&kp RU_MAC_COMMA>;
    };
    td_cs_ru: tap_dance_ru_colon_semicolon {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp RU_MAC_COLON>, <&kp RU_MAC_SEMICOLON>;
    };
    td_eq_ru: tap_dance_ru_exclamation_question {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp RU_EXCL>, <&kp RU_MAC_QMARK>;
    };
    td_md_ru: tap_dance_ru_minus_double_quotes {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp RU_MINUS>, <&kp RU_DQT>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
// ┌───────┬───────┬───────┬───────┬───────┬───────┐     ┌───────┬───────┬───────┬───────┬───────┬───────┐
// │   TAB │     Q │     W │     E │     R │     T │     │     Y │     U │     I │     O │     P │  BKSP │
// ├───────┼───────┼───────┼───────┼───────┼───────┤     ├───────┼───────┼───────┼───────┼───────┼───────┤
// │ LCTRL │     A │     S │     D │     F │     G │     │     H │     J │     K │     L │     ; │     ' │
// ├───────┼───────┼───────┼───────┼───────┼───────┤     ├───────┼───────┼───────┼───────┼───────┼───────┤
// │ LSHFT │     Z │     X │     C │     V │     B │     │     N │     M │     , │     . │     / │   ESC │
// └───────┴───────┴───────┼───────┼───────┼───────┤     ├───────┼───────┼───────┼───────┴───────┴───────┘
//                         │  LCMD │ LOWER │ SPACE │     │ ENTER │ RAISE │  LALT │
//                         └───────┴───────┴───────┘     └───────┴───────┴───────┘
      bindings = <
     &kp TAB    &kp Q  &kp W  &kp E     &kp R      &kp T          &kp Y      &kp U     &kp I      &kp O    &kp P      &kp BSPC
     &kp LCTRL  &kp A  &kp S  &kp D     &kp F      &kp G          &kp H      &kp J     &kp K      &kp L    &kp SEMI   &kp SQT
     &sk LSHFT  &kp Z  &kp X  &kp C     &kp V      &kp B          &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                              &kp LCMD  &mo LOWER  &kp SPACE      &kp RET  &mo RAISE  &kp LALT
      >;
    };

    lower_layer {
      bindings = <
// ┌───────┬───────┬───────┬───────┬───────┬───────┐     ┌───────┬───────┬───────┬───────┬───────┬───────┐
// │   TAB │     1 │     2 │     3 │     4 │     5 │     │     6 │     7 │     8 │     9 │     0 │  BKSP │
// ├───────┼───────┼───────┼───────┼───────┼───────┤     ├───────┼───────┼───────┼───────┼───────┼───────┤
// │ LCTRL │       │       │       │       │       │     │   LFT │   DWN │    UP │   RGT │       │       │
// ├───────┼───────┼───────┼───────┼───────┼───────┤     ├───────┼───────┼───────┼───────┼───────┼───────┤
// │ LSHFT │       │       │       │       │       │     │       │ PG DN │ PG UP │       │       │       │
// └───────┴───────┴───────┼───────┼───────┼───────┤     ├───────┼───────┼───────┼───────┴───────┴───────┘
//                         │  LCMD │       │ SPACE │     │ ENTER │       │  RALT │
//                         └───────┴───────┴───────┘     └───────┴───────┴───────┘
     &kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5         &kp N6    &kp N7     &kp N8     &kp N9     &kp N0  &kp BSPC
     &kp LCTRL  &trans  &trans  &trans    &trans  &trans         &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans  &trans
     &kp LSHFT  &trans  &trans  &trans    &trans  &trans         &trans    &kp PG_DN  &kp PG_UP  &trans     &trans  &trans
                                &kp LCMD  &trans  &kp SPACE      &kp RET   &trans     &kp RALT
      >;
    };

    raise_layer {
      bindings = <
// ┌───────┬───────┬───────┬───────┬───────┬───────┐     ┌───────┬───────┬───────┬───────┬───────┬───────┐
// │   TAB │     ! │     @ │     # │     $ │     % │     │     ^ │     & │     * │     ( │     ) │  BKSP │
// ├───────┼───────┼───────┼───────┼───────┼───────┤     ├───────┼───────┼───────┼───────┼───────┼───────┤
// │ LCTRL │       │       │       │       │       │     │     - │     = │     [ │     ] │     \ │     ` │
// ├───────┼───────┼───────┼───────┼───────┼───────┤     ├───────┼───────┼───────┼───────┼───────┼───────┤
// │ LSHFT │       │       │       │       │       │     │     _ │     + │     { │     } │     | │     ~ │
// └───────┴───────┴───────┼───────┼───────┼───────┤     ├───────┼───────┼───────┼───────┴───────┴───────┘
//                         │  LCMD │       │ SPACE │     │ ENTER │       │  RALT │
//                         └───────┴───────┴───────┘     └───────┴───────┴───────┘
     &kp  TAB   &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT      &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
     &kp LCTRL  &trans    &trans  &trans    &trans    &trans         &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
     &kp LSHFT  &trans    &trans  &trans    &trans    &trans         &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                  &kp LCMD  &trans    &kp SPACE      &kp RET    &trans     &kp RALT
      >;
    };

    adjust_layer {
      bindings = <
// ┌───────┬───────┬───────┬───────┬───────┬───────┐     ┌───────┬───────┬───────┬───────┬───────┬───────┐
// │   TAB │       │       │       │       │       │     │ CPTRE │       │       │       │       │  BKSP │
// ├───────┼───────┼───────┼───────┼───────┼───────┤     ├───────┼───────┼───────┼───────┼───────┼───────┤
// │ BTCLR │   BT1 │   BT2 │   BT3 │   BT4 │   BT5 │     │       │  PREV │ PL/PS │  NEXT │       │       │
// ├───────┼───────┼───────┼───────┼───────┼───────┤     ├───────┼───────┼───────┼───────┼───────┼───────┤
// │ LSHFT │       │       │       │       │       │     │       │ VL DN │  MUTE │ VL UP │       │       │
// └───────┴───────┴───────┼───────┼───────┼───────┤     ├───────┼───────┼───────┼───────┴───────┴───────┘
//                         │  LCMD │       │ SPACE │     │ ENTER │       │  RALT │
//                         └───────┴───────┴───────┘     └───────┴───────┴───────┘
     &kp TAB     &trans        &trans        &trans        &trans        &trans            &kp LG(LS(N4))  &trans        &trans      &trans        &trans  &kp BSPC
     &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans          &kp C_PREV    &kp C_PP    &kp C_NEXT    &trans  &trans
     &kp LSHFT   &trans        &trans        &trans        &trans        &trans            &trans          &kp C_VOL_DN  &kp K_MUTE  &kp C_VOL_UP  &trans  &trans
                                             &kp LCMD      &trans        &kp SPACE         &kp RET         &trans        &kp RALT
      >;
    };

    russian_layer {
// ┌───┬───┬───┬───┬───┬───┐     ┌───┬───┬───┬───┬───┬───┐
// │ Щ │ Ц │ К │ Л │ Б │ Й │     │ Ъ │ Ы │ Я │ Э │ Ф │. ,│
// ├───┼───┼───┼───┼───┼───┤     ├───┼───┼───┼───┼───┼───┤
// │ Ч │ З │ В │ Н │ Т │ Д │     │ И │ А │ О │ Е │ С │RSH│
// ├───┼───┼───┼───┼───┼───┤     ├───┼───┼───┼───┼───┼───┤
// │ Ж │ Х │ П │ Р │ М │ Г │     │ Ё │ Ь │ У │ Ю │ Ш │- "│
// └───┴───┴───┼───┼───┼───┤     ├───┼───┼───┼───┴───┴───┘
//             │! ?│DEL│SPC│     │ENT│BSP│: ;│
//             └───┴───┴───┘     └───┴───┴───┘
      bindings = <
     &kp RU_SHH  &kp RU_C  &kp RU_K  &kp RU_L   &kp RU_B  &kp RU_J      &kp RU_TZ      &kp RU_Y   &kp RU_YA  &kp RU_EE  &kp RU_F   &td_dc_ru
     &kp RU_CH   &kp RU_Z  &kp RU_V  &kp RU_N   &kp RU_T  &kp RU_D      &kp RU_I       &kp RU_A   &kp RU_O   &kp RU_E   &kp RU_S   &sk RSHFT
     &kp RU_ZH   &kp RU_X  &kp RU_P  &kp RU_R   &kp RU_M  &kp RU_G      &kp RU_MAC_YO  &kp RU_MZ  &kp RU_U   &kp RU_YU  &kp RU_SH  &td_md_ru
                                     &td_eq_ru  &kp DEL   &kp SPACE     &kp RET        &kp BSPC   &td_cs_ru
      >;
    };
  };
};
